Importing the class from the module:
>>> BaseGeometry = import('7-base_geometry').BaseGeometry

Attempting to display the area
>>> geometry_object = BaseGeometry()
>>> geometry_object.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

Attempting to provide a non-integer argument
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", "5")
Traceback (most recent call last):
...
TypeError: identifier must be an integer

Attempting to provide a boolean value
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", True)
Traceback (most recent call last):
...
TypeError: identifier must be an integer

Attempting to provide a negative value
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", -5)
Traceback (most recent call last):
...
ValueError: identifier must be greater than 0

Attempting to provide a zero value
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", 0)
Traceback (most recent call last):
...
ValueError: identifier must be greater than 0

Providing a positive value
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", 5)

Providing one argument to integer_validator
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

Integer_validator with no arguments
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Providing three arguments to integer_validator
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("identifier", 1, 2)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

Providing one argument to the area method
>>> geometry_object = BaseGeometry()
>>> geometry_object.area(5)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 2 were given

Providing two arguments to the area method
>>> geometry_object = BaseGeometry()
>>> geometry_object.area(5, 5)
Traceback (most recent call last):
...
TypeError: area() takes 1 positional argument but 3 were given

Providing a tuple to the method
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

Providing a list to the method
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

Providing a dictionary to the method
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

Providing None to the method
>>> geometry_object = BaseGeometry()
>>> geometry_object.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
